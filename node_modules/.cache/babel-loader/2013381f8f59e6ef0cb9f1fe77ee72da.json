{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jessicani/Desktop/react-projects/covid-tracker/src/components/Chart/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  _s();\n\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    console.log(\"This is dailyData: \" + dailyData);\n    fetchAPI();\n  }, []); // if there is data in the dailyData array, populate the\n  // line graph. Else, return null.\n\n  const lineChart = dailyData[0] ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData,\n      datasets: [{}, {}]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"/d+kuJuKj12qpSq7YzoKfQOF8wE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/jessicani/Desktop/react-projects/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchAPI","console","log","lineChart","labels","datasets"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACD,KAFD;;AAIAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBJ,SAApC;AAEAE,IAAAA,QAAQ;AACT,GARQ,EAQN,EARM,CAAT,CAFkB,CAYlB;AACA;;AACA,QAAMG,SAAS,GACbL,SAAS,CAAC,CAAD,CAAT,gBAEA,QAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJM,MAAAA,MAAM,EAAEN,SADJ;AAEJO,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAFN;AADR;AAAA;AAAA;AAAA;AAAA,UAFA,GAOM,IARR;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CA7BD;;GAAMR,K;;KAAAA,K;AA8BN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    console.log(\"This is dailyData: \" + dailyData);\n    \n    fetchAPI();\n  }, []);\n\n  // if there is data in the dailyData array, populate the\n  // line graph. Else, return null.\n  const lineChart = (\n    dailyData[0] \n    ? (\n    <Line\n      data={{\n        labels: dailyData,\n        datasets: [{}, {}],\n      }}\n    />) : null\n  );\n\n  return(\n    <h1>Chart</h1>\n)\n\n}\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}